<blocks app="Snap! 9.0, https://snap.berkeley.edu" version="2"><palette><category name="OWLS" color="255,93,36,1"/></palette><block-definition s="Connect to OWLS on %&apos;server&apos; and port %&apos;poort&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%n">8000</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>hostname</l><l>port</l><l>proc</l></list><l>socket = null;&#xD;connected = false;&#xD;pixelCount = 0;&#xD;realPixelCount = 0;&#xD;&#xD;window.socket = new WebSocket("ws:" + hostname + ":" + String(port));&#xD;window.socket.onopen = function () {&#xD;&#xD;  // initialize the led strip&#xD;  window.socket.send("init");&#xD;&#xD;};&#xD;&#xD;// Onmessage handler to receive the result. The result is the number of pixels,&#xD;// which we will store in a variable.&#xD;window.socket.onmessage = function (message) {&#xD;&#xD;  // store the number of pixels on the strip.&#xD;  pixelCount = parseInt(message.data);&#xD;  realPixelCount = pixelCount;&#xD;  connected = true;&#xD;}&#xD;</l></block><list><block var="server"/><block var="poort"/></list></block><block s="doWait"><l>1</l></block></script></block-definition><block-definition s="Number of pixels" type="reporter" category="OWLS"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l></l></list><l>return (pixelCount);</l></block><list></list></block></block></script></block-definition><block-definition s="Colour all pixels red %&apos;rood&apos; green %&apos;groen&apos; blue %&apos;blauw&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>red</l><l>green</l><l>blue</l><l>proc</l></list><l>var msg = "setpixels " + String(red) + " " + String(green) + " " + String(blue);&#xD;window.socket.send(msg);</l></block><list><custom-block s="ColourLimit %n"><block var="rood"/></custom-block><custom-block s="ColourLimit %n"><block var="groen"/></custom-block><custom-block s="ColourLimit %n"><block var="blauw"/></custom-block></list></block></block></script></block-definition><block-definition s="Disconnect from OWLS" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs></inputs><script><custom-block s="Show immediately %txt"><l>On</l></custom-block><custom-block s="All pixels off"></custom-block><block s="doWait"><l>1</l></block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>proc</l></list><l>var msg = "clear";&#xD;window.socket.send(msg);&#xD;window.socket.onclose = function () {}; // disable onclose handler first&#xD;window.socket.close();                  // close the socket.&#xD;socket = null;&#xD;connected = false;&#xD;pixelCount = 0;&#xD;</l></block><list></list></block></block></script></block-definition><block-definition s="All pixels off" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>proc</l></list><l>window.socket.send("clear");</l></block><list></list></block></block></script></block-definition><block-definition s="Colour pixel %&apos;pixel&apos; red %&apos;rood&apos; green %&apos;groen&apos; blue %&apos;blauw&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>pixel</l><l>red</l><l>green</l><l>blue</l><l>proc</l></list><l>if (pixel &gt;= 0 &amp;&amp; pixel &lt;= pixelCount) {&#xD;  pixel = Math.floor(pixel);&#xD;  var msg = "setpixel " + String(pixel) + " " + String(red) + " " + String(green) + " " + String(blue);&#xD;  window.socket.send(msg);&#xD;}&#xD;</l></block><list><block var="pixel"/><custom-block s="ColourLimit %n"><block var="rood"/></custom-block><custom-block s="ColourLimit %n"><block var="groen"/></custom-block><custom-block s="ColourLimit %n"><block var="blauw"/></custom-block></list></block></block></script></block-definition><block-definition s="Shift pixels %&apos;Richting&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%txt">Left<options>Links&#xD;Rechts</options></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>direction</l><l>proc</l></list><l>if (direction == "Left" || direction == "Links") {&#xD;  window.socket.send("shift left");&#xD;} else {&#xD;  window.socket.send("shift right");&#xD;}&#xD;</l></block><list><block var="Richting"/></list></block></block></script></block-definition><block-definition s="Darken pixels by %&apos;dim&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%n">1</input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>dimAmount</l><l>proc</l></list><l>var msg = "dim " + String(dimAmount);&#xD;window.socket.send(msg);&#xD;</l></block><list><custom-block s="ColourLimit %n"><block var="dim"/></custom-block></list></block></block></script></block-definition><block-definition s="ColourLimit %&apos;kleurwaarde&apos;" type="reporter" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%n"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>color</l></list><l>color = Math.floor(color);&#xD;color = parseInt(color);&#xD;color = Math.min(255,color);&#xD;color = Math.max(0,color);&#xD;return color;&#xD;&#xD;</l></block><list><block var="kleurwaarde"/></list></block></block></script></block-definition><block-definition s="Show immediately %&apos;status&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%txt">On<options>Aan&#xD;Uit</options></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>autoShowValue</l><l>proc</l></list><l>if (autoShowValue == "On" || autoShowValue == "Aan") {&#xD;  window.socket.send("autoshow on");&#xD;} else {&#xD;  window.socket.send("autoshow off");&#xD;}&#xD;</l></block><list><block var="status"/></list></block></script></block-definition><block-definition s="Show pixels" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>proc</l></list><l>window.socket.send("show");</l></block><list></list></block></script></block-definition><block-definition s="Set number of pixels to %&apos;aantalPixels&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%n">8</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>nrPixels</l><l>proc</l></list><l>nrPixels = Math.floor(nrPixels);&#xD;nrPixels = Math.min(realPixelCount, nrPixels);&#xD;nrPixels = Math.max(1,nrPixels);&#xD;var msg = "setVirtualPixels " + String(nrPixels);&#xD;window.socket.send(msg);&#xD;&#xD;// Set the pixel count.&#xD;pixelCount = parseInt(nrPixels);&#xD;</l></block><list><block var="aantalPixels"/></list></block></script></block-definition><block-definition s="Colour gradient from %&apos;vanRood&apos; , %&apos;vanGroen&apos; , %&apos;vanBlauw&apos; to %&apos;naarRood&apos; , %&apos;naarGroen&apos; , %&apos;naarBlauw&apos;" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>roodDelta</l><l>groenDelta</l><l>blauwDelta</l></list></block><block s="doSetVar"><l>roodDelta</l><block s="reportVariadicProduct"><list><block s="reportQuotient"><block s="reportDifference"><custom-block s="ColourLimit %n"><block var="naarRood"/></custom-block><custom-block s="ColourLimit %n"><block var="vanRood"/></custom-block></block><custom-block s="Number of pixels"></custom-block></block><l>2</l></list></block></block><block s="doSetVar"><l>groenDelta</l><block s="reportVariadicProduct"><list><block s="reportQuotient"><block s="reportDifference"><custom-block s="ColourLimit %n"><block var="naarGroen"/></custom-block><custom-block s="ColourLimit %n"><block var="vanGroen"/></custom-block></block><custom-block s="Number of pixels"></custom-block></block><l>2</l></list></block></block><block s="doSetVar"><l>blauwDelta</l><block s="reportVariadicProduct"><list><block s="reportQuotient"><block s="reportDifference"><custom-block s="ColourLimit %n"><block var="naarBlauw"/></custom-block><custom-block s="ColourLimit %n"><block var="vanBlauw"/></custom-block></block><custom-block s="Number of pixels"></custom-block></block><l>2</l></list></block></block><block s="doFor"><l>i</l><l>0</l><block s="reportRound"><block s="reportQuotient"><custom-block s="Number of pixels"></custom-block><l>2</l></block></block><script><custom-block s="Colour pixel %n red %n green %n blue %n"><block var="i"/><block s="reportRound"><block s="reportVariadicSum"><list><block var="vanRood"/><block s="reportVariadicProduct"><list><block var="roodDelta"/><block var="i"/></list></block></list></block></block><block s="reportRound"><block s="reportVariadicSum"><list><block var="vanGroen"/><block s="reportVariadicProduct"><list><block var="groenDelta"/><block var="i"/></list></block></list></block></block><block s="reportRound"><block s="reportVariadicSum"><list><block var="vanBlauw"/><block s="reportVariadicProduct"><list><block var="blauwDelta"/><block var="i"/></list></block></list></block></block></custom-block></script></block><block s="doFor"><l>i</l><block s="reportRound"><block s="reportQuotient"><custom-block s="Number of pixels"></custom-block><l>2</l></block></block><custom-block s="Number of pixels"></custom-block><script><custom-block s="Colour pixel %n red %n green %n blue %n"><block var="i"/><block s="reportRound"><block s="reportVariadicSum"><list><block var="vanRood"/><block s="reportVariadicProduct"><list><block var="roodDelta"/><block s="reportDifference"><custom-block s="Number of pixels"></custom-block><block var="i"/></block></list></block></list></block></block><block s="reportRound"><block s="reportVariadicSum"><list><block var="vanGroen"/><block s="reportVariadicProduct"><list><block var="groenDelta"/><block s="reportDifference"><custom-block s="Number of pixels"></custom-block><block var="i"/></block></list></block></list></block></block><block s="reportRound"><block s="reportVariadicSum"><list><block var="vanBlauw"/><block s="reportVariadicProduct"><list><block var="blauwDelta"/><block s="reportDifference"><custom-block s="Number of pixels"></custom-block><block var="i"/></block></list></block></list></block></block></custom-block></script></block></script></block></script></block-definition><block-definition s="Rainbow" type="command" category="OWLS"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>wielPositie</l><l>a</l></list></block><block s="doWarp"><script><block s="doFor"><l>pixel</l><l>0</l><block s="reportDifference"><custom-block s="Number of pixels"></custom-block><l>1</l></block><script><block s="doSetVar"><l>a</l><block s="reportVariadicProduct"><list><block var="pixel"/><l>256</l></list></block></block><block s="doSetVar"><l>wielPositie</l><block s="reportModulus"><block s="reportQuotient"><block s="reportDifference"><block var="a"/><block s="reportModulus"><block var="a"/><custom-block s="Number of pixels"></custom-block></block></block><custom-block s="Number of pixels"></custom-block></block><l>256</l></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="wielPositie"/><l>85</l></list></block><script><custom-block s="Colour pixel %n red %n green %n blue %n"><block var="pixel"/><block s="reportVariadicProduct"><list><block var="wielPositie"/><l>3</l></list></block><block s="reportDifference"><l>255</l><block s="reportVariadicProduct"><list><block var="wielPositie"/><l>3</l></list></block></block><l>0</l></custom-block></script><script><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="wielPositie"/><l>170</l></list></block><script><block s="doChangeVar"><l>wielPositie</l><l>-85</l></block><custom-block s="Colour pixel %n red %n green %n blue %n"><block var="pixel"/><block s="reportDifference"><l>255</l><block s="reportVariadicProduct"><list><block var="wielPositie"/><l>3</l></list></block></block><l>0</l><block s="reportVariadicProduct"><list><block var="wielPositie"/><l>3</l></list></block></custom-block></script><script><block s="doChangeVar"><l>wielPositie</l><l>-170</l></block><custom-block s="Colour pixel %n red %n green %n blue %n"><block var="pixel"/><l>0</l><block s="reportVariadicProduct"><list><block var="wielPositie"/><l>3</l></list></block><block s="reportDifference"><l>255</l><block s="reportVariadicProduct"><list><block var="wielPositie"/><l>3</l></list></block></block></custom-block></script></block></script></block></script></block></script></block></script></block-definition></blocks>
